language: cpp

os:
  - linux
  - osx
osx_image: xcode9.3

env:
  matrix:
    # Uncomment when Travis upgraded "Ubuntu 12.04 LTS" to a newer version whose repo will have a more up-to-date libtorrent package
    #- lt_branch=dist gui=true
    #- lt_branch=dist gui=false
    - lt_branch=master gui=1
    - lt_branch=RC_1_1 gui=1
  global:
    - secure: "OI9CUjj4lTb0HwwIZU5PbECU3hLlAL6KC8KsbwohG8/O3j5fLcnmDsK4Ad9us5cC39sS11Jcd1kDP2qRcCuST/glVNhLkcjKkiQerOfd5nQ/qL4JYfz/1mfP5mdpz9jHKzpLUIG+TXkbSTjP6VVmsb5KPT+3pKEdRFZB+Pu9+J8="
    - coverity_branch: coverity_scan

matrix:
  exclude:
    - os: osx
      env: lt_branch=RC_1_1 # does not build due to the absent auto_ptr in xcode9.3

branches:
  except:
    - search_encoding_windows
    - v2_9_x

notifications:
  email:
    on_success: change
    on_failure: change

cache:
  ccache: true
  directories:
    - $HOME/hombebrew_cache

# opt-in Ubuntu Trusty
dist: trusty
# memory > 4 GiB is required for libtorrent build, GCC crashes otherwise
sudo: required

addons:
  coverity_scan:
    project:
      name: "qbittorrent/qBittorrent"
      description: "Build submitted via Travis CI"
    build_command_prepend: "./bootstrap.sh && ./configure $qbtconf"
    build_command: make
    branch_pattern: $coverity_branch
    notification_email: sledgehammer999@qbittorrent.org
  apt:
    sources:
      # sources list: https://github.com/travis-ci/apt-source-whitelist/blob/master/ubuntu.json
      - ubuntu-toolchain-r-test
      #- boost-latest
      - sourceline: 'ppa:beineri/opt-qt591-trusty'
      - sourceline: 'ppa:dluxen/cmake-backports'
      - sourceline: 'ppa:rakhimov/boost'
    packages:
      # packages list: https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise
      - [cmake3, ninja-build]
      - libssl-dev
      - [libboost1.61-dev, libboost-system1.61-dev, libboost-chrono1.61-dev, libboost-random1.61-dev]
      - [qt59base, qt59svg, qt59tools]
      - [gcc-7, g++-7]

before_install:
  # only allow specific build for coverity scan, others will stop
  - if [ "$TRAVIS_BRANCH" = "$coverity_branch" ] && ! [ "$TRAVIS_OS_NAME" = "linux" -a "$lt_branch" = "RC_1_0" -a "$gui" = true -a "$build_system" = "qmake" ]; then exit ; fi

  - shopt -s expand_aliases
  - alias make="colormake -j3" # Using nprocs/2 sometimes may fail (gcc is killed by system)
  - qbt_path="$HOME/qbt_install"

  # options for specific branches
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      # setup virtual display for after_success target
      if [ "$gui" = 1 ]; then export "DISPLAY=:99.0" && /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16 ; fi ;

      # Qt 5
      PATH=/opt/qt59/bin:${PATH}

      COMPILER_VERSION=7
      export CXX="${CXX}-${COMPILER_VERSION}" CC="${CC}-${COMPILER_VERSION}"
      # There is an outdated cmake in /usr/local/cmake-<version> which we don't want to use
      # but /usr/local/cmake-<version>/bin is in $PATH, therefore
      # remove all paths containing 'cmake' to use the executable from /usr/bin
      export PATH=`echo ${PATH} | awk -v RS=: -v ORS=: '/cmake/ {next} {print}'`
    fi

  # print settings
  - echo $lt_branch
  - echo $gui
  - echo $ltconf
  - echo $qbtconf

install:
  #- |
    #if [ "$TRAVIS_OS_NAME" = "linux" ]; then
      # build libtorrent from source
      #if [ "$lt_branch" != "dist" ]; then
        #cd "$HOME" && pwd && git clone --depth 1 https://github.com/arvidn/libtorrent.git --branch $lt_branch
        #cd libtorrent && ./autotool.sh && ./configure $ltconf && make install
      #fi
    #fi
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      # dependencies
      brew update > /dev/null
      brew outdated "pkg-config" || brew upgrade "pkg-config"
      brew install colormake ccache zlib qt
      PATH="/usr/local/opt/ccache/libexec:$PATH"
      brew link --force zlib qt

      if [ "$lt_branch" = "RC_1_1" ]; then
        brew install libtorrent-rasterbar
      else
        brew install boost openssl
      fi

      brew outdated cmake || brew upgrade cmake
      brew install ninja

      sudo ln -s /usr/local/opt/qt/mkspecs /usr/local/mkspecs
      sudo ln -s /usr/local/opt/qt/plugins /usr/local/plugins

      MY_CMAKE_OPENSSL_HINT="-DOPENSSL_ROOT_DIR=/usr/local/opt/openssl/"
    fi
  - |
    if [ "$TRAVIS_OS_NAME" = "linux" ] || [ "$lt_branch" = "master" ]; then
        cd "$TRAVIS_BUILD_DIR"
        mkdir libtorrent
        pushd libtorrent
        git clone --depth 1 --branch ${lt_branch} https://github.com/arvidn/libtorrent.git .
        mkdir -p cbuild/debug
        pushd cbuild/debug
        cmake -DCMAKE_BUILD_TYPE=Debug -Ddeprecated-functions=OFF "${MY_CMAKE_OPENSSL_HINT}" -G Ninja ../..
        cmake --build . && sudo cmake --build . --target install
        popd
        popd
    fi
  - |
    if [ "$TRAVIS_BRANCH" != "$coverity_branch" ]; then
      export use_ccache=true
      ccache -V && ccache --show-stats && ccache --zero-stats
    fi

script:
  - if [ "$TRAVIS_BRANCH" = "$coverity_branch" ]; then exit ; fi # skip usual build when running coverity scan
  - |
    cd "$TRAVIS_BUILD_DIR"
    mkdir build
    cd build
    cmake -DCMAKE_DISABLE_FIND_PACKAGE_Qt5Widgets=$((1-gui)) -DCMAKE_INSTALL_PREFIX="$qbt_path" "$MY_CMAKE_OPENSSL_HINT" \
        -G "Ninja" -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=TRUE  ..
  - cmake --build . && cmake --build . --target install

after_success:
  - if [ "$gui" = 1 ]; then qbt_exe="qbittorrent" ; else qbt_exe="qbittorrent-nox" ; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then cd "$qbt_path/bin" ; fi
  - |
    if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      cd "$qbt_path/$qbt_exe.app/Contents/MacOS"
    fi
  - ./$qbt_exe --version

after_script:
  - if [ "$use_ccache" = true ]; then ccache --show-stats ; fi
